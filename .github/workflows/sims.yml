name: Sims

# Sims workflow runs multiple types of simulations (nondeterminism, import-export, after-import, multi-seed-short)
# This workflow will run on all Pull Requests, if a .go, .mod or .sum file have been changed
on:
  pull_request:
    paths:
      - "**.go"
      - "go.mod"
      - "go.sum"
  push:
    branches:
      - main

jobs:
  cleanup-runs:
    runs-on: ubuntu-latest
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  setup:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip-sims')"
    steps:
      - uses: actions/checkout@v3
      - uses: technote-space/get-diff-action@v6.0.1
        with:
          PATTERNS: |
            **/**.go
            go.mod
            go.sum
          SET_ENV_NAME_INSERTIONS: 1
          SET_ENV_NAME_LINES: 1
    outputs:
      should-run: ${{ env.GIT_DIFF }}
      cache-key: ${{ runner.os }}-sims-t8
      cache-path: |
        v*.tar.gz
        rocksdb-*
        ~/go/bin

  build-dependencies:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - name: Output setup
        run: |
          echo "should-run: [${{ needs.setup.outputs.should-run }}]"
          echo " cache-key: [${{ needs.setup.outputs.cache-key }}]"
          echo "cache-path: [${{ needs.setup.outputs.cache-path }}]"
      - uses: actions/cache@v3
        id: cache-setup
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - name: Install cleveldb
        if: steps.cache-setup.outputs.cache-hit != 'true'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y libleveldb-dev
          sudo apt-get install -y libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
      - name: Build rocksdb
        if: steps.cache-setup.outputs.cache-hit != 'true'
        run: |
          export ROCKSDB_SUDO='true'
          export ROCKSDB_DO_CLEANUP='false'
          export ROCKSDB_DO_INSTALL='false'
          make rocksdb
      - uses: actions/setup-go@v3
        if: steps.cache-setup.outputs.cache-hit != 'true'
        with:
          go-version: 1.17
      - name: Display go version
        if: steps.cache-setup.outputs.cache-hit != 'true'
        run: go version
      - name: Install runsim
        if: steps.cache-setup.outputs.cache-hit != 'true'
        run: export GO111MODULE="on" && go get github.com/cosmos/tools/cmd/runsim@v1.0.0

  build-provenanced:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - name: Install cleveldb
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y libleveldb-dev
          sudo apt-get install -y libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
      - name: Install rocksdb
        run: |
          export ROCKSDB_SUDO='true'
          export ROCKSDB_DO_CLEANUP='false'
          export ROCKSDB_DO_BUILD='false'
          make rocksdb
          ls -al /usr/local/lib/librocksdb.*
          readlink -f /usr/local/lib/librocksdb.so.6.29
          echo "LD_LIBRARY_PATH: [$LD_LIBRARY_PATH]"
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display go version
        run: go version
      - name: Install provenanced
        run: make install
      - name: Display provenanced version
        run: |
          if [[ -z "$LD_LIBRARY_PATH" ]]; then LD_LIBRARY_PATH='/usr/local/lib' elif [[ ! "$LD_LIBRARY_PATH" =~ (^|:)/usr/local/bin(:|$) ]]; then LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib"; fi
          export LD_LIBRARY_PATH
          ls -al /usr/local/lib/librocksdb.*
          readlink -f /usr/local/lib/librocksdb.so.6.29
          echo "LD_LIBRARY_PATH: [$LD_LIBRARY_PATH]"
          provenanced version --long

  simple-goleveldb:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-simple goleveldb
        run: make test-sim-simple

  simple-cleveldb:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - name: Install cleveldb
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y libleveldb-dev
          sudo apt-get install -y libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-simple cleveldb
        run: make DB_BACKEND=cleveldb test-sim-simple

  simple-rocksdb:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - name: Install rocksdb
        run: |
          export ROCKSDB_SUDO='true'
          export ROCKSDB_DO_CLEANUP='false'
          export ROCKSDB_DO_BUILD='false'
          make rocksdb
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-simple rocksdb
        run: make DB_BACKEND=rocksdb test-sim-simple

  simple-badgerdb:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-simple badgerdb
        run: make DB_BACKEND=badgerdb test-sim-simple

  nondeterminism:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-nondeterminism
        run: make test-sim-nondeterminism

  import-export-goleveldb:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-import-export goleveldb
        run: make test-sim-import-export

  import-export-cleveldb:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - name: Install cleveldb
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update
          sudo apt-get install -y libleveldb-dev
          sudo apt-get install -y libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-import-export cleveldb
        run: make DB_BACKEND=cleveldb test-sim-import-export

  import-export-rocksdb:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - name: Install rocksdb
        run: |
          export ROCKSDB_SUDO='true'
          export ROCKSDB_DO_CLEANUP='false'
          export ROCKSDB_DO_BUILD='false'
          make rocksdb
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-import-export rocksdb
        run: make DB_BACKEND=rocksdb test-sim-import-export

  import-export-badgerdb:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-import-export badgerdb
        run: make DB_BACKEND=badgerdb test-sim-import-export

  multi-seed-short:
    runs-on: ubuntu-latest
    needs: [setup, build-dependencies, build-provenanced]
    if: needs.setup.outputs.should-run
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          key: ${{ needs.setup.outputs.cache-key }}
          path: ${{ needs.setup.outputs.cache-path }}
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17
      - name: Display versions
        run: |
          go version
          provenanced version --long
      - name: test-sim-multi-seed-short
        run: make test-sim-multi-seed-short
