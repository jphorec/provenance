name: Provenance Binary Release

# TODO: Delete this file before merging.
# This is a copy of the release.yml with the publishing stuff ripped out.
# It's just to test that the building is successful since I've made some changes.

on:
  pull_request:

jobs:
  #  This action cleans up previously running instances of a workflow on the same branch. This accomplishes
  #  the task of automatically cancelling CI runs on pushes to the same branch, which is a common feature in
  #  most CI systems but currently not possible with GitHub actions.
  cleanup_runs:
    runs-on: ubuntu-latest
    name: Cleanup Workflows
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  build_init:
    runs-on: ubuntu-latest
    name: Build Init
    steps:
      - id: version
        run: echo "::set-output name=version::${GITHUB_REF##*/}"
    outputs:
      version: ${{ steps.version.outputs.version }}
      go_version: "1.17"

  build_osx:
    runs-on: macos-latest
    needs:
      - build_init
    name: Build OSX
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.build_init.outputs.go_version }}
      - name: Build osx binary
        run: |
          make WITH_CLEVELDB=false WITH_ROCKSDB=false VERSION=${{ needs.build_init.outputs.version }} build-release-bin build-release-libwasm

  build_linux:
    runs-on: ubuntu-latest
    needs:
      - build_init
    name: Build Linux
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ needs.build_init.outputs.go_version }}
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libleveldb-dev
          sudo apt-get install -y libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev
      - name: Build rocksdb
        run: |
          export ROCKSDB_SUDO='true'
          make rocksdb
      - name: Setup go
        uses: actions/setup-go@v2.1.5
        with:
          go-version: ${{ needs.build_init.outputs.go_version }}
      - name: Build linux binary
        run: |
          make VERSION=${{ needs.build_init.outputs.version }} build-release-zip

  java_kotlin_release:
    runs-on: ubuntu-latest
    needs:
      - build_init
    name: Maven Publishing
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Java Setup
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          server-id: github

      - name: Build
        run: |
          cd protoBindings
          ./gradlew build \
            -PartifactVersion=$(echo "${{ needs.build_init.outputs.version }}" | sed -e 's/^v//') \
            --info
